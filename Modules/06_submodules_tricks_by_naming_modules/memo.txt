// Update Date : 2025-01-22
// OS : Windows 10 64bit
// Program : Visual Studio 2022
// Version : C++20
// Configuration : Debug-x64, Release-x64

https://learn.microsoft.com/en-us/cpp/cpp/tutorial-named-modules-cpp?view=msvc-170#module-naming
https://en.cppreference.com/w/cpp/language/modules#Module_declarations
https://www.modernescpp.com/index.php/c-20-divide-modules/
https://vector-of-bool.github.io/2019/03/10/modules-1.html

서브모듈은 하나의 모듈을 계층적으로 나누어 관리하는 방식의 모듈을 말한다.

달리 표현하자면 작은 모듈들이 모여 하나의 모듈을 형성하는 것이라고 보면 된다.

예를 들면 이런 느낌이다.

Math
+--- Math.Core
+--- Math.Utils
+--- Math.Geometry
     +--- Math.Geometry.Point
     +--- Math.Geometry.Line

단일 서브모듈을 사용하는 것도 가능하고 합쳐진 형태의 단일 모듈을 사용하는 것도 가능하다.

C++20의 Modules는 직접적으로 이러한 Submodules를 지원하지 않는다.

하지만 export import와 모듈 이름을 짓는 방식을 이용하면 서브모듈을 적용한 것 같은 트릭을 줄 수 있다.

C++에서는 모듈을 작명할 때 점(.)을 일반 문자처럼 사용하는 것이 가능하다.

Math.Core가 있을 때 "Math" + "Core"를 구분해서 보는 것이 아닌 "Math.Core"를 하나의 식별자로 보는 것이다.

"Math" 쪽에서 "Math.Core" 모듈을 대상으로 export import를 적용하면 모듈을 서브모듈처럼 사용한 것 같은 효과를 줄 수 있다.

(중요) 모듈의 이름에 점(.)을 붙이는 건 어떠한 특별한 의미가 있는 것이 아닌 그냥 문자 하나로 본다.

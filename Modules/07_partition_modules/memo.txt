// Update Date : 2025-01-22
// OS : Windows 10 64bit
// Program : Visual Studio 2022
// Version : C++20
// Configuration : Debug-x64, Release-x64

https://en.cppreference.com/w/cpp/language/modules#Module_partitions

서브모듈을 구현하는 건 일종의 눈속임 방식이며 서브모듈로 구현된 건 개별적인 하나하나의 모듈이다.

다행히 C++20의 Modules는 하나의 모듈을 분할해서 작업하기 위한 파티션이란 기능을 제공하고 있다.

원문 : A module partition represents exactly one module unit (two module units cannot designate the same module partition).

Math
+--- Math:Core
+--- Math:Utils
+--- Math:Geometry

파티션은 콜론(:)을 써서 적용한다.

Math 쪽에서는 코드가 다음과 같이 구성되어야 한다.

export module Math;
(export) import :Core;
(export) import :Utils;
(export) import :Geometry;

export의 여부에 따라 파티션의 내용을 외부에 공개할 것인지 말 것인지를 결정할 수 있다.

파티션 코드는 다음과 같이 작성되어야 한다.

export Module:Core;
...

export Module:Utils;
...

export Module:Geometry;
...


참고로 파티션끼리는 서로 import하는 것이 가능하다.

예를 들어 Core에서 Utils를 필요로 한다면 다음과 같이 코드를 작성하면 된다.

export Module:Core;
import :Utils;
...

(중요) 파티션을 구성하기 위한 주 모듈은 반드시 존재해야 한다.

(중요) 파티션으로 구현된 건 동일 모듈 내에서만 공개되며 외부에서는 가져와 사용하는 것이 불가능하다.

main.cpp에서 다음과 같이 Module:Core만 포함해서 사용하는 것은 허용되지 않는다.

// 안 된다(서브모듈과의 차이가 여기서 나옴).
import Module:Core;

int main()
{
    ...
}

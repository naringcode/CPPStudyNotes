// Update Date : 2025-01-22
// OS : Windows 10 64bit
// Program : Visual Studio 2022
// Version : C++20
// Configuration : Debug-x64, Release-x64

https://en.cppreference.com/w/cpp/language/modules#Private_module_fragment
https://www.modernescpp.com/index.php/c-20-modules-private-module-fragment-and-header-units/
https://vector-of-bool.github.io/2019/10/07/modules-3.html

원문 : a modification of the private module fragment does not cause recompilation.

Private module fragment는 하나의 모듈 파일 안에 선언부와 정의부를 구분하기 위해서 사용하는 것이다.

이걸 적용하면 하나의 파일 내에서 정의부 코드를 수정해도 컴파일러가 해석 유닛을 구분해서 적용하기 때문에 모듈 파일 전체를 재컴파일하지 않는다.

(중요) 쉽게 생각하면 모듈 인터페이스의 선언과 정의가 구분되어 있으니 선언부 코드가 변경되었을 때 발생하는 모듈 인터페이스를 사용하는 쪽의 재컴파일도 발생하지 않는다.

06_submodules_tricks_by_naming_modules를 보면 이에 대해 설명한 내용이 있다.

컴파일러마다 차이가 있을 수는 있어도 재컴파일을 발생시키지 않는 것이 핵심이다.


Private module fragment는 반드시 하나의 파일 안에 작성되어야 한다.

적용하기 위한 코드는 다음과 같으며 항상 모듈 인터페이스의 끝부분에 작성되어야 한다.

private: module;

"private: module;"의 위에 있는 코드는 인터페이스 코드이고 아래에 있는 코드는 정의부 코드이다.

